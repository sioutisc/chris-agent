/* ********************************************************************* *
 *                                                                       *
 *   =============================================================       *
 *   Copyright 2002-2010,                                                *
 *   Christos Sioutis <christos.sioutis@gmail.com>                       *
 *   =============================================================       *
 *   This software was developed during my PhD studies at:               *
 *                                                                       *
 *   Knowledge Based Intelligent Engineering Systems Centre (KES)        *
 *   School of Electrical and Information Engineering                    *
 *   University of South Australia                                       *
 *   =============================================================       *
 *                                                                       *
 *   This file is part of CHRIS.                                         *
 *                                                                       *
 *   CHRIS is free software: you can redistribute it and/or              *
 *   modify it under the terms of the GNU Lesser General Public Licence  *
 *   as published by the Free Software Foundation, either version 3 of   *
 *   the License, or (at your option) any later version.                 *
 *                                                                       *
 *   CHRIS is distributed in the hope that it will be useful,            *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of      *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the       *
 *   GNU Lesser General Public License for more details.                 *
 *                                                                       *
 *   You should have received a copy of the GNU Lesser General Public    *
 *   License along with CHRIS.                                           *
 *   If not, see <http://www.gnu.org/licenses/>.                         *
 *                                                                       *
 * ********************************************************************* */



/*
 * OrientationStage.java
 *
 * Created on 24 September 2004, 11:48
 */

package edu.unisa.chris.learning;
import edu.unisa.chris.orientation.*;
import edu.unisa.chris.decision.*;
import edu.unisa.chris.action.*;
/**
 * Orientation Stage is the second stage from the OODA loop
 * @author  Christos Sioutis
 */
public capability LearningStage extends Capability{
        // LEARNING STAGE BELIEFSETS
        #exports data LearningGoals learningGoals();
        #exports data StateActionValueFunction saValueFunction();
        #exports data StateValueFunction sValueFunction();
        #exports data SelectedAction selectedAction();
//      #exports data SkillControl skillControl();

        // BELIEFSETS IMPORTED FROM ACTION
        #imports data Actions actions();
        #imports data Scheduler scheduler();

        //BELIEFSETS IMPORTED FROM ORIENTATION
        #imports data CurrentStateInstance currentStateInstance();
//        #private data Rewards rewards();

        //BELIEFSETS IMPORTED FROM DECISION
        #imports data Goals goals();


        #handles external event Target;
        #uses plan LearningTask;
        
        #posts event Learn;
        #handles event Learn;
        #uses plan QLearning;
        #uses plan Sarsa;
        #uses plan PQLearning;
        #uses plan PSarsa;

        #posts event ChooseAction;
        #handles event ChooseAction;
        #uses plan EGreedy;
        #uses plan SoftMax;

        #posts external event ActionEvent; //handled by action stage
        #posts external event Target; //handled by the agent

        //skill control
        #posts event SkillControlEvent;
        #handles event SkillControlEvent;
        #uses plan SkillControlPlan;

//        #private data ActionOptions options();
//        #private data Episodes episodes();
}
