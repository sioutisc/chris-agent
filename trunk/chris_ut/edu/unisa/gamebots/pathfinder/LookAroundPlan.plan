/* ********************************************************************* *
 *                                                                       *
 *   =============================================================       *
 *   Copyright 2002-2010,                                                *
 *   Christos Sioutis <christos.sioutis@gmail.com>                       *
 *   =============================================================       *
 *   This software was developed during my PhD studies at:               *
 *                                                                       *
 *   Knowledge Based Intelligent Engineering Systems Centre (KES)        *
 *   School of Electrical and Information Engineering                    *
 *   University of South Australia                                       *
 *   =============================================================       *
 *                                                                       *
 *   This file is part of CHRIS.                                         *
 *                                                                       *
 *   CHRIS is free software: you can redistribute it and/or              *
 *   modify it under the terms of the GNU Lesser General Public Licence  *
 *   as published by the Free Software Foundation, either version 3 of   *
 *   the License, or (at your option) any later version.                 *
 *                                                                       *
 *   CHRIS is distributed in the hope that it will be useful,            *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of      *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the       *
 *   GNU Lesser General Public License for more details.                 *
 *                                                                       *
 *   You should have received a copy of the GNU Lesser General Public    *
 *   License along with CHRIS.                                           *
 *   If not, see <http://www.gnu.org/licenses/>.                         *
 *                                                                       *
 * ********************************************************************* */



/*
 * Activation.java
 *
 * Created on September 22, 2004, 3:37 PM
 */

package edu.unisa.gamebots.pathfinder;
import edu.unisa.chris.decision.*;
import edu.unisa.chris.agent.*;
import edu.unisa.chris.orientation.*;
import edu.unisa.gamebots.utjackinterface.*;
import edu.unisa.gamebots.utjackinterface.controller.*;
import edu.unisa.gamebots.utjackinterface.caps.sync.*;
import edu.unisa.gamebots.chris.*;
import aos.jack.util.cursor.Change;
import java.util.*;
/**
 * This plan posts Alert events for each of the data objects produced by the Activation class
 * @author  Christos Sioutis
 */
public plan LookAroundPlan extends Plan{
        #handles event Target ev;
        #uses interface UtCommands ut;
        #uses interface CHRISFunctions chris;
        #reads data CurrentStateInstance currentStateInstance;
        #uses data ExploredNavs explored;
        UtCoordinate current;

        static boolean relevant(Target ev){
            return ev.name.equals("LookAround");
        }

	body(){
            UtChrisStateInstance stateInstance = (UtChrisStateInstance) currentStateInstance.getCurrentStateInstance();
            UtNav closest = stateInstance.closeToWhat(stateInstance.self.location);
            if(closest == null || !explored.contains(closest.id)){
                chris.logInfo("PATHFINDER: Looking around at: "+closest,chris.LOG_AGENT,true);
                for(int i=0;i<4;i++){                    
                    ut.rotate(18384);
                    @sleep(1.0);
                    stateInstance = (UtChrisStateInstance) currentStateInstance.getCurrentStateInstance();
                    List reachableNavs = stateInstance.getReachableNavs(true);
                    for(int j=0; closest!=null && reachableNavs!=null && j<reachableNavs.size(); j++){
                        UtNav tmp = (UtNav)reachableNavs.get(j);
                        if(!closest.id.equals(tmp.id))
                            explored.add(closest.id,tmp);
                    }
                }
            }
	}
}
